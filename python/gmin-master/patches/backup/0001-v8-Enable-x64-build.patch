From 4dc61af573833c09cad5f1f206aa0d9cf9f4f755 Mon Sep 17 00:00:00 2001
From: Yang Gu <yang.gu@intel.com>
Date: Fri, 28 Mar 2014 16:17:01 +0800
Subject: [PATCH] v8: Enable x64 build

Change-Id: Ib526335f4bdc16de5e9d2a023b73455fd99827a2
---
 Android.libv8.mk                  |  1 +
 Android.mksnapshot.mk             |  1 +
 Android.v8common.mk               | 22 +++++++++++++++++++++-
 build/android.gypi                |  5 +++++
 build/common.gypi                 |  9 +++++++++
 src/atomicops_internals_x86_gcc.h |  8 ++++----
 src/platform-linux.cc             | 17 +++++++++++++++++
 7 files changed, 58 insertions(+), 5 deletions(-)

diff --git a/Android.libv8.mk b/Android.libv8.mk
index d83857b..20e5357 100644
--- a/Android.libv8.mk
+++ b/Android.libv8.mk
@@ -104,6 +104,7 @@ LOCAL_CFLAGS_mips += -finline-limit=64
 LOCAL_CFLAGS_mips += -fno-strict-aliasing
 
 LOCAL_CFLAGS_x86 += -DV8_TARGET_ARCH_IA32
+LOCAL_CFLAGS_x86_64 += -DV8_TARGET_ARCH_X64
 
 ifeq ($(DEBUG_V8),true)
 	LOCAL_CFLAGS += -DDEBUG -UNDEBUG
diff --git a/Android.mksnapshot.mk b/Android.mksnapshot.mk
index 67b56be..31fc830 100644
--- a/Android.mksnapshot.mk
+++ b/Android.mksnapshot.mk
@@ -96,6 +96,7 @@ LOCAL_CFLAGS_mips += -finline-limit=64
 LOCAL_CFLAGS_mips += -fno-strict-aliasing
 
 LOCAL_CFLAGS_x86 += -DV8_TARGET_ARCH_IA32
+LOCAL_CFLAGS_x86_64 += -DV8_TARGET_ARCH_X64
 
 ifeq ($(DEBUG_V8),true)
 	LOCAL_CFLAGS += -DDEBUG -UNDEBUG
diff --git a/Android.v8common.mk b/Android.v8common.mk
index d1ffcaf..b43ebe7 100644
--- a/Android.v8common.mk
+++ b/Android.v8common.mk
@@ -159,6 +159,26 @@ LOCAL_SRC_FILES_x86 += \
 		src/ia32/regexp-macro-assembler-ia32.cc \
 		src/ia32/stub-cache-ia32.cc
 
+LOCAL_SRC_FILES_x86_64 += \
+		src/x64/assembler-x64.cc \
+		src/x64/builtins-x64.cc \
+		src/x64/codegen-x64.cc \
+		src/x64/code-stubs-x64.cc \
+		src/x64/cpu-x64.cc \
+		src/x64/debug-x64.cc \
+		src/x64/deoptimizer-x64.cc \
+		src/x64/disasm-x64.cc \
+		src/x64/frames-x64.cc \
+		src/x64/full-codegen-x64.cc \
+		src/x64/ic-x64.cc \
+		src/x64/lithium-codegen-x64.cc \
+		src/x64/lithium-gap-resolver-x64.cc \
+		src/x64/lithium-x64.cc \
+		src/x64/macro-assembler-x64.cc \
+		src/x64/regexp-macro-assembler-x64.cc \
+		src/x64/simulator-x64.cc \
+		src/x64/stub-cache-x64.cc
+
 # Enable DEBUG option.
 ifeq ($(DEBUG_V8),true)
   LOCAL_SRC_FILES += \
@@ -178,7 +198,7 @@ V8_LOCAL_JS_LIBRARY_FILES := \
 	src/uri.js \
 	src/math.js \
 	src/messages.js \
-	src/apinatives.js 
+	src/apinatives.js
 
 # These JS library sources must follow the above sources but their order is not
 # important.
diff --git a/build/android.gypi b/build/android.gypi
index ffd0648..9bc7fba 100644
--- a/build/android.gypi
+++ b/build/android.gypi
@@ -174,6 +174,11 @@
                   '-L<(android_ndk_root)/sources/cxx-stl/stlport/libs/x86',
                 ],
               }],
+              ['target_arch=="x64"', {
+                'ldflags': [
+                  '-L<(android_ndk_root)/sources/cxx-stl/stlport/libs/x86_64',
+                ],
+              }],
             ],
           }],
           ['target_arch=="ia32"', {
diff --git a/build/common.gypi b/build/common.gypi
index 5c0c323..9a497f6 100644
--- a/build/common.gypi
+++ b/build/common.gypi
@@ -167,6 +167,11 @@
               'V8_TARGET_ARCH_IA32',
             ],
           }],
+          ['v8_target_arch=="x64"', {
+            'defines': [
+              'V8_TARGET_ARCH_X64',
+            ],
+          }],
           ['v8_target_arch=="mips"', {
             'defines': [
               'V8_TARGET_ARCH_MIPS',
@@ -269,6 +274,10 @@
             'cflags': [ '-m32' ],
             'ldflags': [ '-m32' ],
           }],
+          [ 'target_arch=="x64"', {
+            'cflags': [ '-m64' ],
+            'ldflags': [ '-m64' ],
+          }],
           [ 'v8_no_strict_aliasing==1', {
             'cflags': [ '-fno-strict-aliasing' ],
           }],
diff --git a/src/atomicops_internals_x86_gcc.h b/src/atomicops_internals_x86_gcc.h
index 6e55b50..32c581d 100644
--- a/src/atomicops_internals_x86_gcc.h
+++ b/src/atomicops_internals_x86_gcc.h
@@ -168,7 +168,7 @@ inline Atomic32 Release_Load(volatile const Atomic32* ptr) {
   return *ptr;
 }
 
-#if defined(__x86_64__)
+#if defined(__x86_64__) && defined(V8_HOST_ARCH_64_BIT)
 
 // 64-bit low-level operations on 64-bit platform.
 
@@ -266,9 +266,9 @@ inline Atomic64 Acquire_CompareAndSwap(volatile Atomic64* ptr,
                                        Atomic64 old_value,
                                        Atomic64 new_value) {
   Atomic64 x = NoBarrier_CompareAndSwap(ptr, old_value, new_value);
-  if (AtomicOps_Internalx86CPUFeatures.has_amd_lock_mb_bug) {
-    __asm__ __volatile__("lfence" : : : "memory");
-  }
+  //if (AtomicOps_Internalx86CPUFeatures.has_amd_lock_mb_bug) {
+  //  __asm__ __volatile__("lfence" : : : "memory");
+  //}
   return x;
 }
 
diff --git a/src/platform-linux.cc b/src/platform-linux.cc
index 6c4a549..402c0ec 100644
--- a/src/platform-linux.cc
+++ b/src/platform-linux.cc
@@ -1007,6 +1007,23 @@ typedef struct ucontext {
   __sigset_t uc_sigmask;
 } ucontext_t;
 enum { REG_EBP = 6, REG_ESP = 7, REG_EIP = 14 };
+
+#elif !defined(__GLIBC__) && defined(__x86_64__)
+// x64 version for Android.
+typedef struct {
+  uint64_t gregs[23];
+  void* fpregs;
+  uint64_t __reserved1[8];
+} mcontext_t;
+
+typedef struct ucontext {
+  uint64_t uc_flags;
+  struct ucontext *uc_link;
+  stack_t uc_stack;
+  mcontext_t uc_mcontext;
+  // Other fields are not used by V8, don't define them here.
+} ucontext_t;
+enum { REG_RBP = 10, REG_RSP = 15, REG_RIP = 16 };
 #endif
 
 
-- 
1.8.3.2

