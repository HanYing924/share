From 7da0c98f3e643e3322d516ed8dddf48ea2ae5b19 Mon Sep 17 00:00:00 2001
From: Yang Gu <yang.gu@intel.com>
Date: Fri, 11 Apr 2014 17:07:25 +0800
Subject: [PATCH] Fix experimental ndk

---
 .../platforms/android-20/arch-x86_64/usr/include/elf.h       |  3 ++-
 .../android-20/arch-x86_64/usr/include/sys/exec_elf.h        | 12 ++++++------
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/elf.h b/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/elf.h
index 7a217b0..3e4ff5d 100644
--- a/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/elf.h
+++ b/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/elf.h
@@ -29,10 +29,11 @@
 #define _ELF_H
 
 #include <linux/auxvec.h>
-#include <linux/elf.h>
+//#include <linux/elf.h>
 #include <linux/elf-em.h>
 
 #include <machine/elf_machdep.h>
+#include <sys/exec_elf.h>
 
 typedef struct {
   __u32 a_type;
diff --git a/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/sys/exec_elf.h b/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/sys/exec_elf.h
index f72f81e..7df659f 100644
--- a/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/sys/exec_elf.h
+++ b/ndk_experimental/platforms/android-20/arch-x86_64/usr/include/sys/exec_elf.h
@@ -33,7 +33,7 @@
 #ifndef _SYS_EXEC_ELF_H_
 #define _SYS_EXEC_ELF_H_
 
-#include <machine/_types.h>
+//#include <machine/_types.h>
 #include <machine/exec.h>
 
 typedef __uint8_t	Elf_Byte;
@@ -63,7 +63,7 @@ typedef __uint32_t	Elf64_Half;
 typedef __uint16_t	Elf64_Quarter;
 
 /*
- * e_ident[] identification indexes 
+ * e_ident[] identification indexes
  * See http://www.caldera.com/developers/gabi/2000-07-17/ch4.eheader.html
  */
 #define EI_MAG0		0		/* file ID */
@@ -74,7 +74,7 @@ typedef __uint16_t	Elf64_Quarter;
 #define EI_DATA		5		/* data encoding */
 #define EI_VERSION	6		/* ELF header version */
 #define EI_OSABI	7		/* OS/ABI ID */
-#define EI_ABIVERSION	8		/* ABI version */ 
+#define EI_ABIVERSION	8		/* ABI version */
 #define EI_PAD		9		/* start of pad bytes */
 #define EI_NIDENT	16		/* Size of e_ident[] */
 
@@ -136,7 +136,7 @@ typedef struct elfhdr {
 	Elf32_Half	e_phnum;	/* number of program header entries */
 	Elf32_Half	e_shentsize;	/* section header entry size */
 	Elf32_Half	e_shnum;	/* number of section header entries */
-	Elf32_Half	e_shstrndx;	/* section header table's "section 
+	Elf32_Half	e_shstrndx;	/* section header table's "section
 					   header string table" entry offset */
 } Elf32_Ehdr;
 
@@ -177,7 +177,7 @@ typedef struct {
 #define EM_486		6		/* Intel 80486 - unused? */
 #define EM_860		7		/* Intel 80860 */
 #define EM_MIPS		8		/* MIPS R3000 Big-Endian only */
-/* 
+/*
  * Don't know if EM_MIPS_RS4_BE,
  * EM_SPARC64, EM_PARISC,
  * or EM_PPC are ABI compliant
@@ -460,7 +460,7 @@ typedef struct {
 #define DT_NUM		25		/* Number used. */
 #define DT_LOPROC	0x70000000	/* reserved range for processor */
 #define DT_HIPROC	0x7fffffff	/*  specific dynamic array tags */
-	
+
 /* Standard ELF hashing function */
 unsigned int elf_hash(const unsigned char *name);
 
-- 
1.8.3.2

