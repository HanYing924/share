From b1509b81112058a4f4858ef7740e51c287ef808f Mon Sep 17 00:00:00 2001
From: Jie Chen <jie.a.chen@intel.com>
Date: Sun, 26 Jan 2014 09:19:09 +0800
Subject: [PATCH 3/9] jni fixes in base/ for Android x64

Atomic operations support
Fixed type of 'nativeEvent' in JavaHandlerThread.java
base/i18n/rtl.cc
---
 base/android/java_handler_thread.cc |  2 +-
 base/android/java_handler_thread.h  |  2 +-
 base/base.gyp                       |  2 +-
 base/i18n/rtl.cc                    | 14 +++++++++-----
 4 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/base/android/java_handler_thread.cc b/base/android/java_handler_thread.cc
index ce5d0fe..b9cf81a 100644
--- a/base/android/java_handler_thread.cc
+++ b/base/android/java_handler_thread.cc
@@ -46,7 +46,7 @@ void JavaHandlerThread::Start() {
 void JavaHandlerThread::Stop() {
 }
 
-void JavaHandlerThread::InitializeThread(JNIEnv* env, jobject obj, jint event) {
+void JavaHandlerThread::InitializeThread(JNIEnv* env, jobject obj, jlong event) {
   // TYPE_JAVA to get the Android java style message loop.
   message_loop_.reset(new base::MessageLoop(base::MessageLoop::TYPE_JAVA));
   static_cast<MessageLoopForUI*>(message_loop_.get())->Start();
diff --git a/base/android/java_handler_thread.h b/base/android/java_handler_thread.h
index 9f66d66..5670f7d 100644
--- a/base/android/java_handler_thread.h
+++ b/base/android/java_handler_thread.h
@@ -33,7 +33,7 @@ class BASE_EXPORT JavaHandlerThread {
 
   // Called from java on the newly created thread.
   // Start() will not return before this methods has finished.
-  void InitializeThread(JNIEnv* env, jobject obj, jint event);
+  void InitializeThread(JNIEnv* env, jobject obj, jlong event);
 
   static bool RegisterBindings(JNIEnv* env);
 
diff --git a/base/base.gyp b/base/base.gyp
index 9779333..57db557 100644
--- a/base/base.gyp
+++ b/base/base.gyp
@@ -131,7 +131,7 @@
         }],
         ['OS == "android" and _toolset == "target"', {
           'conditions': [
-            ['target_arch == "ia32"', {
+            ['target_arch == "ia32" or target_arch == "x64"', {
               'sources/': [
                 ['include', '^atomicops_internals_x86_gcc\\.cc$'],
               ],
diff --git a/base/i18n/rtl.cc b/base/i18n/rtl.cc
index 851b036..75a6b15 100644
--- a/base/i18n/rtl.cc
+++ b/base/i18n/rtl.cc
@@ -261,17 +261,19 @@ bool AdjustStringForLocaleDirection(string16* text) {
   bool ui_direction_is_rtl = IsRTL();
 
   bool has_rtl_chars = StringContainsStrongRTLChars(*text);
+  const size_t pos = 0;
+  const size_t num = 1;
   if (!ui_direction_is_rtl && has_rtl_chars) {
     WrapStringWithRTLFormatting(text);
-    text->insert(0U, 1U, kLeftToRightMark);
+    text->insert(pos, num, kLeftToRightMark);
     text->push_back(kLeftToRightMark);
   } else if (ui_direction_is_rtl && has_rtl_chars) {
     WrapStringWithRTLFormatting(text);
-    text->insert(0U, 1U, kRightToLeftMark);
+    text->insert(pos, num, kRightToLeftMark);
     text->push_back(kRightToLeftMark);
   } else if (ui_direction_is_rtl) {
     WrapStringWithLTRFormatting(text);
-    text->insert(0U, 1U, kRightToLeftMark);
+    text->insert(pos, num, kRightToLeftMark);
     text->push_back(kRightToLeftMark);
   } else {
     return false;
@@ -332,7 +334,8 @@ void WrapStringWithLTRFormatting(string16* text) {
     return;
 
   // Inserting an LRE (Left-To-Right Embedding) mark as the first character.
-  text->insert(0U, 1U, kLeftToRightEmbeddingMark);
+  text->insert(static_cast<size_t>(0), static_cast<size_t>(1),
+               kLeftToRightEmbeddingMark);
 
   // Inserting a PDF (Pop Directional Formatting) mark as the last character.
   text->push_back(kPopDirectionalFormatting);
@@ -343,7 +346,8 @@ void WrapStringWithRTLFormatting(string16* text) {
     return;
 
   // Inserting an RLE (Right-To-Left Embedding) mark as the first character.
-  text->insert(0U, 1U, kRightToLeftEmbeddingMark);
+  text->insert(static_cast<size_t>(0), static_cast<size_t>(1),
+               kRightToLeftEmbeddingMark);
 
   // Inserting a PDF (Pop Directional Formatting) mark as the last character.
   text->push_back(kPopDirectionalFormatting);
-- 
1.8.3.2

