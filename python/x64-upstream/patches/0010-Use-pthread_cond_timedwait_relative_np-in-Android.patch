From 1d00568d80e97e095744888cc3e75712516a5b60 Mon Sep 17 00:00:00 2001
From: Zhenyu Liang <zhenyu.liang@intel.com>
Date: Tue, 25 Feb 2014 18:29:46 +0800
Subject: [PATCH 10/11] Use pthread_cond_timedwait_relative_np in Android

Because pthread_cond_timedwait_monotonic_np is obsoleted in 64bit
Android. It is not clear whether pthread_cond_timedwait_relative_np
will be also obsoleted. But Mac OS X does support it.
We should use pthread_condattr_setclock here as Linux, but it isn't
supported by bionic currently.
---
 base/synchronization/condition_variable_posix.cc | 7 +------
 1 file changed, 1 insertion(+), 6 deletions(-)

diff --git a/base/synchronization/condition_variable_posix.cc b/base/synchronization/condition_variable_posix.cc
index e70a301..499d5f7 100644
--- a/base/synchronization/condition_variable_posix.cc
+++ b/base/synchronization/condition_variable_posix.cc
@@ -68,7 +68,7 @@ void ConditionVariable::TimedWait(const TimeDelta& max_time) {
   user_lock_->CheckHeldAndUnmark();
 #endif
 
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_ANDROID)
   int rv = pthread_cond_timedwait_relative_np(
       &condition_, user_mutex_, &relative_time);
 #else
@@ -93,12 +93,7 @@ void ConditionVariable::TimedWait(const TimeDelta& max_time) {
   absolute_time.tv_nsec %= Time::kNanosecondsPerSecond;
   DCHECK_GE(absolute_time.tv_sec, now.tv_sec);  // Overflow paranoia
 
-#if defined(OS_ANDROID)
-  int rv = pthread_cond_timedwait_monotonic_np(
-      &condition_, user_mutex_, &absolute_time);
-#else
   int rv = pthread_cond_timedwait(&condition_, user_mutex_, &absolute_time);
-#endif  // OS_ANDROID
 #endif  // OS_MACOSX
 
   DCHECK(rv == 0 || rv == ETIMEDOUT);
-- 
1.8.3.2

