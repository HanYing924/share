From 21f0a16d3934ecaa1f13d1585cb5406c53163831 Mon Sep 17 00:00:00 2001
From: Yang Gu <yang.gu@intel.com>
Date: Mon, 10 Mar 2014 21:43:26 +0800
Subject: [PATCH 5/8] Use pthread_cond_timedwait_relative_np in Android

Because pthread_cond_timedwait_monotonic_np is obsoleted in 64bit
Android. It is not clear whether pthread_cond_timedwait_relative_np
will be also obsoleted. But Mac OS X does support it.
We should use pthread_condattr_setclock here as Linux, but it isn't
supported by bionic currently.
---
 base/synchronization/condition_variable_posix.cc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/base/synchronization/condition_variable_posix.cc b/base/synchronization/condition_variable_posix.cc
index 8492a01..29547729 100644
--- a/base/synchronization/condition_variable_posix.cc
+++ b/base/synchronization/condition_variable_posix.cc
@@ -70,7 +70,7 @@ void ConditionVariable::TimedWait(const TimeDelta& max_time) {
   user_lock_->CheckHeldAndUnmark();
 #endif
 
-#if defined(OS_MACOSX)
+#if defined(OS_MACOSX) || defined(OS_ANDROID)
   int rv = pthread_cond_timedwait_relative_np(
       &condition_, user_mutex_, &relative_time);
 #else
@@ -95,13 +95,13 @@ void ConditionVariable::TimedWait(const TimeDelta& max_time) {
   absolute_time.tv_nsec %= Time::kNanosecondsPerSecond;
   DCHECK_GE(absolute_time.tv_sec, now.tv_sec);  // Overflow paranoia
 
-#if defined(OS_ANDROID) && defined(HAVE_PTHREAD_COND_TIMEDWAIT_MONOTONIC)
+#if defined(HAVE_PTHREAD_COND_TIMEDWAIT_MONOTONIC)
   int rv = pthread_cond_timedwait_monotonic_np(
       &condition_, user_mutex_, &absolute_time);
 #else
   int rv = pthread_cond_timedwait(&condition_, user_mutex_, &absolute_time);
-#endif  // OS_ANDROID && HAVE_PTHREAD_COND_TIMEDWAIT_MONOTONIC
-#endif  // OS_MACOSX
+#endif  HAVE_PTHREAD_COND_TIMEDWAIT_MONOTONIC
+#endif  // OS_MACOSX || OS_ANDROID
 
   DCHECK(rv == 0 || rv == ETIMEDOUT);
 #if !defined(NDEBUG)
-- 
1.8.3.2

