From a41720de20c990077e314f46e287b98a1de8dbc9 Mon Sep 17 00:00:00 2001
From: Zhenyu Liang <zhenyu.liang@intel.com>
Date: Wed, 14 May 2014 20:03:50 +0800
Subject: [PATCH] Fix an ANR issue in InProcessCommandBuffer

This is a quick and dirty fix. The root cause needs to be identified.
But the ANR is definitely caused by self-deadlock.

WaitForGetOffsetInRange(running on UI thread) needs to wait the flush
event which is signaled in FlushOnGpuThread(running on GPU thread).
But on Android, there is no GPU thread, all methods run on UI thread.
So if WaitForGetOffsetInRange happens to be called before
FlushOnGpuThread, self-deadlock occurs.
---
 gpu/command_buffer/service/in_process_command_buffer.cc |    4 ++++
 1 file changed, 4 insertions(+)

diff --git a/gpu/command_buffer/service/in_process_command_buffer.cc b/gpu/command_buffer/service/in_process_command_buffer.cc
index 20766db..c389902 100644
--- a/gpu/command_buffer/service/in_process_command_buffer.cc
+++ b/gpu/command_buffer/service/in_process_command_buffer.cc
@@ -537,10 +537,14 @@ void InProcessCommandBuffer::Flush(int32 put_offset) {
     return;
 
   last_put_offset_ = put_offset;
+#if defined(OS_ANDROID)
+  FlushOnGpuThread(put_offset);
+#else
   base::Closure task = base::Bind(&InProcessCommandBuffer::FlushOnGpuThread,
                                   gpu_thread_weak_ptr_,
                                   put_offset);
   QueueTask(task);
+#endif
 }
 
 void InProcessCommandBuffer::WaitForTokenInRange(int32 start, int32 end) {
-- 
1.7.10.4

