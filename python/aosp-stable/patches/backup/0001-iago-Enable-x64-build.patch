From 25c9f5c35582a1d57ebf9b5943d63c83096d16d4 Mon Sep 17 00:00:00 2001
From: Yang Gu <yang.gu@intel.com>
Date: Fri, 28 Mar 2014 16:58:45 +0800
Subject: [PATCH] iago: Enable x64 build

Change-Id: I4be5179f7d1f835aae6112f631db8e652d402fd7
---
 editdisklbl/diskconfig.c | 11 ++++++-----
 editdisklbl/diskutils.c  |  7 ++++---
 editdisklbl/write_lst.c  |  7 ++++---
 3 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/editdisklbl/diskconfig.c b/editdisklbl/diskconfig.c
index 168186d..4cc02d6 100644
--- a/editdisklbl/diskconfig.c
+++ b/editdisklbl/diskconfig.c
@@ -19,6 +19,7 @@
 
 #include <errno.h>
 #include <fcntl.h>
+#include <inttypes.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -80,7 +81,7 @@ parse_len(const char *str, uint64_t *plen)
         *plen *= multiple;
 
         if (*plen > 0xffffffffULL) {
-            ALOGE("Length specified is too large!: %llu KB", *plen);
+            ALOGE("Length specified is too large!: %" PRIu64 " KB", *plen);
             return 1;
         }
     }
@@ -127,7 +128,7 @@ load_partitions(cnode *root, struct disk_info *dinfo)
             if (parse_len(tmp, &len))
                 return 1;
             pinfo->len_kb = (uint32_t) len;
-        } else 
+        } else
             pinfo->len_kb = 0;
 
         ++dinfo->num_parts;
@@ -341,7 +342,7 @@ validate(struct disk_info *dinfo)
     }
 
 #if 1
-    ALOGV("Device/file %s: size=%llu bytes, num_lba=%u, sect_size=%d",
+    ALOGV("Device/file %s: size=%" PRIu64 " bytes, num_lba=%u, sect_size=%d",
          dinfo->device, disk_size, dinfo->num_lba, dinfo->sect_size);
 #endif
 
@@ -376,8 +377,8 @@ validate(struct disk_info *dinfo)
 
     /* only matters for disks, not files */
     if (S_ISBLK(stat.st_mode) && total_size > disk_size) {
-        ALOGE("Total requested size of partitions (%llu) is greater than disk "
-             "size (%llu).", total_size, disk_size);
+        ALOGE("Total requested size of partitions (%" PRIu64 ") is greater than disk "
+             "size (%" PRIu64 ").", total_size, disk_size);
         goto fail;
     }
 
diff --git a/editdisklbl/diskutils.c b/editdisklbl/diskutils.c
index e325735..8866cb9 100644
--- a/editdisklbl/diskutils.c
+++ b/editdisklbl/diskutils.c
@@ -19,6 +19,7 @@
 
 #include <errno.h>
 #include <fcntl.h>
+#include <inttypes.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -40,7 +41,7 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
     int done = 0;
     uint64_t total = 0;
 
-    ALOGI("Writing RAW image '%s' to '%s' (offset=%llu)", src, dst, offset);
+    ALOGI("Writing RAW image '%s' to '%s' (offset=%" PRIu64 ")", src, dst, offset);
     if ((src_fd = open(src, O_RDONLY)) < 0) {
         ALOGE("Could not open %s for reading (errno=%d).", src, errno);
         goto fail;
@@ -53,7 +54,7 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
         }
 
         if (lseek64(dst_fd, offset, SEEK_SET) != offset) {
-            ALOGE("Could not seek to offset %lld in %s.", offset, dst);
+            ALOGE("Could not seek to offset %" PRId64 " in %s.", offset, dst);
             goto fail;
         }
     }
@@ -101,7 +102,7 @@ write_raw_image(const char *dst, const char *src, loff_t offset, int test)
     if (dst_fd >= 0)
         fsync(dst_fd);
 
-    ALOGI("Wrote %llu bytes to %s @ %lld", total, dst, offset);
+    ALOGI("Wrote %" PRIu64 " bytes to %s @ %" PRId64 "", total, dst, offset);
 
     close(src_fd);
     if (dst_fd >= 0)
diff --git a/editdisklbl/write_lst.c b/editdisklbl/write_lst.c
index 826ef7a..a3f4488 100644
--- a/editdisklbl/write_lst.c
+++ b/editdisklbl/write_lst.c
@@ -16,6 +16,7 @@
  */
 
 #define LOG_TAG "write_lst"
+#include <inttypes.h>
 #include <sys/types.h>
 #include <stdint.h>
 #include <stdio.h>
@@ -71,18 +72,18 @@ wlist_commit(int fd, struct write_list *lst, int test)
 {
     for(; lst; lst = lst->next) {
         if (lseek64(fd, lst->offset, SEEK_SET) != (loff_t)lst->offset) {
-            ALOGE("Cannot seek to the specified position (%lld).", lst->offset);
+            ALOGE("Cannot seek to the specified position (%" PRId64 ").", lst->offset);
             goto fail;
         }
 
         if (!test) {
             if (write(fd, lst->data, lst->len) != (int)lst->len) {
-                ALOGE("Failed writing %u bytes at position %lld.", lst->len,
+                ALOGE("Failed writing %u bytes at position %" PRId64 ".", lst->len,
                      lst->offset);
                 goto fail;
             }
         } else
-            ALOGI("Would write %d bytes @ offset %lld.", lst->len, lst->offset);
+            ALOGI("Would write %d bytes @ offset %" PRId64 ".", lst->len, lst->offset);
     }
 
     return 0;
-- 
1.8.3.2

